{"C:\\Users\\Alf\\Source\\overwatch-api\\api\\src\\owl\\index.js":{"path":"C:\\Users\\Alf\\Source\\overwatch-api\\api\\src\\owl\\index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":11,"column":3}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":28}},"3":{"start":{"line":12,"column":0},"end":{"line":17,"column":3}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":32}},"5":{"start":{"line":18,"column":0},"end":{"line":23,"column":3}},"6":{"start":{"line":21,"column":4},"end":{"line":21,"column":33}},"7":{"start":{"line":25,"column":12},"end":{"line":25,"column":53}},"8":{"start":{"line":27,"column":16},"end":{"line":27,"column":61}},"9":{"start":{"line":29,"column":17},"end":{"line":29,"column":63}},"10":{"start":{"line":31,"column":39},"end":{"line":31,"column":95}}},"fnMap":{"0":{"name":"get","decl":{"start":{"line":8,"column":16},"end":{"line":8,"column":19}},"loc":{"start":{"line":8,"column":22},"end":{"line":10,"column":3}},"line":8},"1":{"name":"get","decl":{"start":{"line":14,"column":16},"end":{"line":14,"column":19}},"loc":{"start":{"line":14,"column":22},"end":{"line":16,"column":3}},"line":14},"2":{"name":"get","decl":{"start":{"line":20,"column":16},"end":{"line":20,"column":19}},"loc":{"start":{"line":20,"column":22},"end":{"line":22,"column":3}},"line":20},"3":{"name":"_interopRequireDefault","decl":{"start":{"line":31,"column":9},"end":{"line":31,"column":31}},"loc":{"start":{"line":31,"column":37},"end":{"line":31,"column":97}},"line":31}},"branchMap":{"0":{"loc":{"start":{"line":31,"column":46},"end":{"line":31,"column":94}},"type":"cond-expr","locations":[{"start":{"line":31,"column":70},"end":{"line":31,"column":73}},{"start":{"line":31,"column":76},"end":{"line":31,"column":94}}],"line":31},"1":{"loc":{"start":{"line":31,"column":46},"end":{"line":31,"column":67}},"type":"binary-expr","locations":[{"start":{"line":31,"column":46},"end":{"line":31,"column":49}},{"start":{"line":31,"column":53},"end":{"line":31,"column":67}}],"line":31}},"s":{"0":1,"1":1,"2":0,"3":1,"4":0,"5":1,"6":0,"7":1,"8":1,"9":1,"10":3},"f":{"0":0,"1":0,"2":0,"3":3},"b":{"0":[3,0],"1":[3,3]},"inputSourceMap":{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA","sourceRoot":"C:\\Users\\Alf\\Source\\overwatch-api\\api\\src\\owl\\","sourcesContent":["import live from './live';\r\nimport schedule from './schedule';\r\nimport standings from './standings';\r\n\r\n\r\nexport {\r\n    live as getLiveMatch,\r\n    schedule as getSchedule,\r\n    standings as getStandings,\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"67ede88ca26e457369bea96db3212bc2992cc3b0","contentHash":"b88ad514f4b3e4fca2379ff61b9b6e35b43a8147192fc5cc796d327ca1de036a"},"C:\\Users\\Alf\\Source\\overwatch-api\\api\\src\\owl\\live.js":{"path":"C:\\Users\\Alf\\Source\\overwatch-api\\api\\src\\owl\\live.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"2":{"start":{"line":8,"column":22},"end":{"line":8,"column":72}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":95}},"4":{"start":{"line":13,"column":12},"end":{"line":13,"column":56}},"5":{"start":{"line":14,"column":16},"end":{"line":18,"column":3}},"6":{"start":{"line":19,"column":2},"end":{"line":26,"column":5}},"7":{"start":{"line":20,"column":15},"end":{"line":22,"column":5}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":19}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":12}},"10":{"start":{"line":32,"column":2},"end":{"line":37,"column":3}},"11":{"start":{"line":33,"column":4},"end":{"line":35,"column":6}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":13}},"13":{"start":{"line":39,"column":2},"end":{"line":68,"column":4}},"14":{"start":{"line":42,"column":8},"end":{"line":48,"column":10}},"15":{"start":{"line":53,"column":8},"end":{"line":58,"column":10}},"16":{"start":{"line":69,"column":2},"end":{"line":69,"column":11}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":97}},"line":10},"1":{"name":"_default","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":17}},"loc":{"start":{"line":12,"column":22},"end":{"line":27,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":48},"end":{"line":19,"column":49}},"loc":{"start":{"line":19,"column":64},"end":{"line":24,"column":3}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":14},"end":{"line":24,"column":15}},"loc":{"start":{"line":24,"column":29},"end":{"line":26,"column":3}},"line":24},"4":{"name":"transform","decl":{"start":{"line":29,"column":9},"end":{"line":29,"column":18}},"loc":{"start":{"line":29,"column":25},"end":{"line":70,"column":1}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":41,"column":50},"end":{"line":41,"column":51}},"loc":{"start":{"line":41,"column":63},"end":{"line":49,"column":7}},"line":41},"6":{"name":"(anonymous_6)","decl":{"start":{"line":52,"column":38},"end":{"line":52,"column":39}},"loc":{"start":{"line":52,"column":51},"end":{"line":59,"column":7}},"line":52}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":94}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":94}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10},"2":{"loc":{"start":{"line":32,"column":2},"end":{"line":37,"column":3}},"type":"if","locations":[{"start":{"line":32,"column":2},"end":{"line":37,"column":3}},{"start":{"line":32,"column":2},"end":{"line":37,"column":3}}],"line":32}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"b":{"0":[0,1],"1":[1,1],"2":[0,0]},"inputSourceMap":{"version":3,"sources":["live.js"],"names":["cb","url","options","uri","encodeURI","encoding","json","then","resp","data","transform","err","t","Object","getOwnPropertyNames","liveMatch","length","competitors","map","o","name","primaryColor","secondaryColor","abbreviatedName","logo","scores","status","games","number","points","state","attributes","startDate","endDate","wins","ties","losses","timeToMatch","liveStatus"],"mappings":";;;;;;;AAAA;;;;AAGe,kBAASA,EAAT,EAAa;AAC1B,MAAMC,GAAG,GAAG,4CAAZ;AAEA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAEC,SAAS,CAACH,GAAD,CADA;AAEdI,IAAAA,QAAQ,EAAE,MAFI;AAGdC,IAAAA,IAAI,EAAE;AAHQ,GAAhB;AAMA,kCAAGJ,OAAH,EAAYK,IAAZ,CAAiB,UAACC,IAAD,EAAU;AACzB,QAAMF,IAAI,GAAG;AACXG,MAAAA,IAAI,EAAEC,SAAS,CAACF,IAAI,CAACC,IAAN;AADJ,KAAb;AAIAT,IAAAA,EAAE,CAAC,IAAD,EAAOM,IAAP,CAAF;AACD,GAND,WAMS,UAAAK,GAAG,EAAI;AACdX,IAAAA,EAAE,CAACW,GAAD,CAAF;AACD,GARD;AASD;;AAED,SAASD,SAAT,CAAmBD,IAAnB,EAAyB;AACvB,MAAIG,CAAJ;;AAEA,MAAIC,MAAM,CAACC,mBAAP,CAA2BL,IAAI,CAACM,SAAhC,EAA2CC,MAA3C,KAAsD,CAA1D,EAA6D;AAC3DJ,IAAAA,CAAC,GAAG;AACFG,MAAAA,SAAS,EAAE;AADT,KAAJ;AAGA,WAAOH,CAAP;AACD;;AAEDA,EAAAA,CAAC,GAAG;AACFG,IAAAA,SAAS,EAAE;AACTE,MAAAA,WAAW,EAAER,IAAI,CAACM,SAAL,CAAeE,WAAf,CAA2BC,GAA3B,CAA+B,UAAAC,CAAC;AAAA,eAC1C;AACCC,UAAAA,IAAI,EAAED,CAAC,CAACC,IADT;AAECC,UAAAA,YAAY,EAAEF,CAAC,CAACE,YAFjB;AAGCC,UAAAA,cAAc,EAAEH,CAAC,CAACG,cAHnB;AAICC,UAAAA,eAAe,EAAEJ,CAAC,CAACI,eAJpB;AAKCC,UAAAA,IAAI,EAAEL,CAAC,CAACK;AALT,SAD0C;AAAA,OAAhC,CADJ;AAUTC,MAAAA,MAAM,EAAEhB,IAAI,CAACM,SAAL,CAAeU,MAVd;AAWTC,MAAAA,MAAM,EAAEjB,IAAI,CAACM,SAAL,CAAeW,MAXd;AAYTC,MAAAA,KAAK,EAAElB,IAAI,CAACM,SAAL,CAAeY,KAAf,CAAqBT,GAArB,CAAyB,UAAAC,CAAC;AAAA,eAC9B;AACCS,UAAAA,MAAM,EAAET,CAAC,CAACS,MADX;AAECC,UAAAA,MAAM,EAAEV,CAAC,CAACU,MAFX;AAGCC,UAAAA,KAAK,EAAEX,CAAC,CAACW,KAHV;AAICZ,UAAAA,GAAG,EAAEC,CAAC,CAACY,UAAF,CAAab;AAJnB,SAD8B;AAAA,OAA1B,CAZE;AAoBTc,MAAAA,SAAS,EAAEvB,IAAI,CAACM,SAAL,CAAeiB,SApBjB;AAqBTC,MAAAA,OAAO,EAAExB,IAAI,CAACM,SAAL,CAAekB,OArBf;AAsBTC,MAAAA,IAAI,EAAEzB,IAAI,CAACM,SAAL,CAAemB,IAtBZ;AAuBTC,MAAAA,IAAI,EAAE1B,IAAI,CAACM,SAAL,CAAeoB,IAvBZ;AAwBTC,MAAAA,MAAM,EAAE3B,IAAI,CAACM,SAAL,CAAeqB,MAxBd;AAyBTC,MAAAA,WAAW,EAAE5B,IAAI,CAACM,SAAL,CAAesB,WAzBnB;AA0BTC,MAAAA,UAAU,EAAE7B,IAAI,CAACM,SAAL,CAAeuB;AA1BlB;AADT,GAAJ;AA8BA,SAAO1B,CAAP;AACD","sourceRoot":"C:\\Users\\Alf\\Source\\overwatch-api\\api\\src\\owl\\","sourcesContent":["import rp from 'request-promise';\r\n\r\n\r\nexport default function(cb) {\r\n  const url = 'https://api.overwatchleague.com/live-match';\r\n\r\n  const options = {\r\n    uri: encodeURI(url),\r\n    encoding: 'utf8',\r\n    json: true,\r\n  }\r\n\r\n  rp(options).then((resp) => {\r\n    const json = {\r\n      data: transform(resp.data),\r\n    }\r\n\r\n    cb(null, json);\r\n  }).catch(err => {\r\n    cb(err);\r\n  });\r\n}\r\n\r\nfunction transform(data) {\r\n  let t;\r\n\r\n  if (Object.getOwnPropertyNames(data.liveMatch).length === 0) {\r\n    t = {\r\n      liveMatch: {},\r\n    }\r\n    return t;\r\n  }\r\n\r\n  t = {\r\n    liveMatch: {\r\n      competitors: data.liveMatch.competitors.map(o =>\r\n        ({\r\n          name: o.name,\r\n          primaryColor: o.primaryColor,\r\n          secondaryColor: o.secondaryColor,\r\n          abbreviatedName: o.abbreviatedName,\r\n          logo: o.logo,\r\n        })\r\n      ),\r\n      scores: data.liveMatch.scores,\r\n      status: data.liveMatch.status,\r\n      games: data.liveMatch.games.map(o => \r\n        ({\r\n          number: o.number,\r\n          points: o.points,\r\n          state: o.state,\r\n          map: o.attributes.map\r\n        })\r\n      ),\r\n      startDate: data.liveMatch.startDate,\r\n      endDate: data.liveMatch.endDate,\r\n      wins: data.liveMatch.wins,\r\n      ties: data.liveMatch.ties,\r\n      losses: data.liveMatch.losses,\r\n      timeToMatch: data.liveMatch.timeToMatch,\r\n      liveStatus: data.liveMatch.liveStatus,\r\n    }\r\n  }\r\n  return t;\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ae9536ed489d6c0b3bb91194dcd8a61cd63b2a83","contentHash":"425d8f08f6f1e5b2f6ee84cd3dd91d2ea91964366bd5848e6df32d5fc3de9b8e"},"C:\\Users\\Alf\\Source\\overwatch-api\\api\\src\\owl\\schedule.js":{"path":"C:\\Users\\Alf\\Source\\overwatch-api\\api\\src\\owl\\schedule.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"2":{"start":{"line":8,"column":22},"end":{"line":8,"column":72}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":95}},"4":{"start":{"line":13,"column":12},"end":{"line":13,"column":54}},"5":{"start":{"line":14,"column":16},"end":{"line":18,"column":3}},"6":{"start":{"line":19,"column":2},"end":{"line":26,"column":5}},"7":{"start":{"line":20,"column":15},"end":{"line":22,"column":5}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":19}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":12}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":97}},"line":10},"1":{"name":"_default","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":17}},"loc":{"start":{"line":12,"column":22},"end":{"line":27,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":48},"end":{"line":19,"column":49}},"loc":{"start":{"line":19,"column":64},"end":{"line":24,"column":3}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":14},"end":{"line":24,"column":15}},"loc":{"start":{"line":24,"column":29},"end":{"line":26,"column":3}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":94}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":94}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"f":{"0":1,"1":0,"2":0,"3":0},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["schedule.js"],"names":["cb","url","options","uri","encodeURI","encoding","json","then","resp","data","err"],"mappings":";;;;;;;AAAA;;;;AAGe,kBAASA,EAAT,EAAa;AAC1B,MAAMC,GAAG,GAAG,0CAAZ;AAEA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAEC,SAAS,CAACH,GAAD,CADA;AAEdI,IAAAA,QAAQ,EAAE,MAFI;AAGdC,IAAAA,IAAI,EAAE;AAHQ,GAAhB;AAMA,kCAAGJ,OAAH,EAAYK,IAAZ,CAAiB,UAACC,IAAD,EAAU;AACzB,QAAMF,IAAI,GAAG;AACXG,MAAAA,IAAI,EAAED,IAAI,CAACC;AADA,KAAb;AAIAT,IAAAA,EAAE,CAAC,IAAD,EAAOM,IAAP,CAAF;AACD,GAND,WAMS,UAAAI,GAAG,EAAI;AACdV,IAAAA,EAAE,CAACU,GAAD,CAAF;AACD,GARD;AASD","sourceRoot":"C:\\Users\\Alf\\Source\\overwatch-api\\api\\src\\owl\\","sourcesContent":["import rp from 'request-promise';\r\n\r\n\r\nexport default function(cb) {\r\n  const url = 'https://api.overwatchleague.com/schedule';\r\n\r\n  const options = {\r\n    uri: encodeURI(url),\r\n    encoding: 'utf8',\r\n    json: true,\r\n  }\r\n\r\n  rp(options).then((resp) => {\r\n    const json = {\r\n      data: resp.data,\r\n    }\r\n\r\n    cb(null, json);\r\n  }).catch(err => {\r\n    cb(err);\r\n  });\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"66b19ec182426fbb0e5b94d7bdd671ce3b6e90d7","contentHash":"53cd9327107d58b489a8e6b61320ef7aa56f2672eb1cf81370cc3ffff2c627e2"},"C:\\Users\\Alf\\Source\\overwatch-api\\api\\src\\owl\\standings.js":{"path":"C:\\Users\\Alf\\Source\\overwatch-api\\api\\src\\owl\\standings.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"2":{"start":{"line":8,"column":22},"end":{"line":8,"column":72}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":95}},"4":{"start":{"line":13,"column":12},"end":{"line":13,"column":58}},"5":{"start":{"line":14,"column":16},"end":{"line":18,"column":3}},"6":{"start":{"line":19,"column":2},"end":{"line":26,"column":5}},"7":{"start":{"line":20,"column":15},"end":{"line":22,"column":5}},"8":{"start":{"line":23,"column":4},"end":{"line":23,"column":19}},"9":{"start":{"line":25,"column":4},"end":{"line":25,"column":12}},"10":{"start":{"line":30,"column":17},"end":{"line":30,"column":97}},"11":{"start":{"line":32,"column":17},"end":{"line":39,"column":4}},"12":{"start":{"line":33,"column":4},"end":{"line":38,"column":11}},"13":{"start":{"line":34,"column":6},"end":{"line":34,"column":36}},"14":{"start":{"line":36,"column":6},"end":{"line":36,"column":24}},"15":{"start":{"line":37,"column":6},"end":{"line":37,"column":17}},"16":{"start":{"line":40,"column":2},"end":{"line":40,"column":18}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":97}},"line":10},"1":{"name":"_default","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":17}},"loc":{"start":{"line":12,"column":22},"end":{"line":27,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":19,"column":48},"end":{"line":19,"column":49}},"loc":{"start":{"line":19,"column":64},"end":{"line":24,"column":3}},"line":19},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":14},"end":{"line":24,"column":15}},"loc":{"start":{"line":24,"column":29},"end":{"line":26,"column":3}},"line":24},"4":{"name":"transform","decl":{"start":{"line":29,"column":9},"end":{"line":29,"column":18}},"loc":{"start":{"line":29,"column":25},"end":{"line":41,"column":1}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":32,"column":26},"end":{"line":32,"column":27}},"loc":{"start":{"line":32,"column":39},"end":{"line":39,"column":3}},"line":32},"6":{"name":"(anonymous_6)","decl":{"start":{"line":33,"column":33},"end":{"line":33,"column":34}},"loc":{"start":{"line":33,"column":48},"end":{"line":35,"column":5}},"line":33},"7":{"name":"(anonymous_7)","decl":{"start":{"line":35,"column":14},"end":{"line":35,"column":15}},"loc":{"start":{"line":35,"column":34},"end":{"line":38,"column":5}},"line":35}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":94}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":94}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"sources":["standings.js"],"names":["cb","url","options","uri","encodeURI","encoding","json","then","resp","data","transform","err","includes","filtered","map","o","Object","keys","filter","key","reduce","obj"],"mappings":";;;;;;;AAAA;;;;AAGe,kBAASA,EAAT,EAAa;AAC1B,MAAMC,GAAG,GAAG,8CAAZ;AAEA,MAAMC,OAAO,GAAG;AACdC,IAAAA,GAAG,EAAEC,SAAS,CAACH,GAAD,CADA;AAEdI,IAAAA,QAAQ,EAAE,MAFI;AAGdC,IAAAA,IAAI,EAAE;AAHQ,GAAhB;AAMA,kCAAGJ,OAAH,EAAYK,IAAZ,CAAiB,UAACC,IAAD,EAAU;AAEzB,QAAMF,IAAI,GAAG;AACXG,MAAAA,IAAI,EAAEC,SAAS,CAACF,IAAI,CAACC,IAAN;AADJ,KAAb;AAIAT,IAAAA,EAAE,CAAC,IAAD,EAAOM,IAAP,CAAF;AACD,GAPD,WAOS,UAAAK,GAAG,EAAI;AACdX,IAAAA,EAAE,CAACW,GAAD,CAAF;AACD,GATD;AAUD;;AAED,SAASD,SAAT,CAAmBD,IAAnB,EAAyB;AACrB,MAAMG,QAAQ,GAAG,CACf,IADe,EAEf,YAFe,EAGf,MAHe,EAIf,iBAJe,EAKf,QALe,EAMf,QANe,EAOf,WAPe,CAAjB,CADqB,CAWrB;;AACA,MAAMC,QAAQ,GAAGJ,IAAI,CAACK,GAAL,CAAS,UAAAC,CAAC,EAAI;AAC7B,WAAOC,MAAM,CAACC,IAAP,CAAYF,CAAZ,EACJG,MADI,CACG,UAAAC,GAAG;AAAA,aAAIP,QAAQ,CAACA,QAAT,CAAkBO,GAAlB,CAAJ;AAAA,KADN,EAEJC,MAFI,CAEG,UAACC,GAAD,EAAMF,GAAN,EAAc;AACpBE,MAAAA,GAAG,CAACF,GAAD,CAAH,GAAWJ,CAAC,CAACI,GAAD,CAAZ;AACA,aAAOE,GAAP;AACD,KALI,EAKF,EALE,CAAP;AAMD,GAPgB,CAAjB;AAQA,SAAOR,QAAP;AACH","sourceRoot":"C:\\Users\\Alf\\Source\\overwatch-api\\api\\src\\owl\\","sourcesContent":["import rp from 'request-promise';\r\n\r\n\r\nexport default function(cb) {\r\n  const url = 'https://api.overwatchleague.com/v2/standings';\r\n\r\n  const options = {\r\n    uri: encodeURI(url),\r\n    encoding: 'utf8',\r\n    json: true,\r\n  }\r\n\r\n  rp(options).then((resp) => {\r\n\r\n    const json = {\r\n      data: transform(resp.data),\r\n    }\r\n\r\n    cb(null, json);\r\n  }).catch(err => {\r\n    cb(err);\r\n  });\r\n}\r\n\r\nfunction transform(data) {\r\n    const includes = [\r\n      'id',\r\n      'divisionId',\r\n      'name',\r\n      'abbreviatedName',\r\n      'league',\r\n      'stages',\r\n      'preseason',\r\n    ];\r\n\r\n    // Filter only the properties we want to use.\r\n    const filtered = data.map(o => {\r\n      return Object.keys(o)\r\n        .filter(key => includes.includes(key))\r\n        .reduce((obj, key) => {\r\n          obj[key] = o[key];\r\n          return obj;\r\n        }, {});\r\n    });\r\n    return filtered;\r\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"710e350a9ae877d7e4bac9e54d8e27357f6386e1","contentHash":"0246cc8a90e1beaaef81d620ac4fb1bae4c56f511131919a07682b5fef667939"}}